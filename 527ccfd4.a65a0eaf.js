(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{139:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return d}));var r=n(0),i=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=i.a.createContext({}),p=function(e){var t=i.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},b=function(e){var t=p(e.components);return i.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},j=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),b=p(n),j=r,d=b["".concat(s,".").concat(j)]||b[j]||u[j]||o;return n?i.a.createElement(d,a(a({ref:t},l),{},{components:n})):i.a.createElement(d,a({ref:t},l))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=j;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:r,s[1]=a;for(var l=2;l<o;l++)s[l]=n[l];return i.a.createElement.apply(null,s)}return i.a.createElement.apply(null,n)}j.displayName="MDXCreateElement"},99:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return a})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return p}));var r=n(3),i=n(7),o=(n(0),n(139)),s={id:"jest",title:"Jest",sidebar_label:"Jest"},a={unversionedId:"testing/jest",id:"testing/jest",isDocsHomePage:!1,title:"Jest",description:"Jest is a delightful JavaScript Testing Framework with a focus on simplicity.",source:"@site/docs/testing/jest.md",slug:"/testing/jest",permalink:"/superplate/docs/testing/jest",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/testing/jest.md",version:"current",sidebar_label:"Jest",sidebar:"someSidebar",previous:{title:"next-i18next",permalink:"/superplate/docs/i18n/next-i18next"},next:{title:"Testing Library",permalink:"/superplate/docs/testing/testing-library"}},c=[{value:"Implementation",id:"implementation",children:[{value:"Dependencies",id:"dependencies",children:[]},{value:"<code>jest.config.js</code>",id:"jestconfigjs",children:[]},{value:"<code>jest.setup.js</code>",id:"jestsetupjs",children:[]},{value:"Running Tests",id:"running-tests",children:[]}]},{value:"Adding Jest to an Existing Project",id:"adding-jest-to-an-existing-project",children:[]}],l={toc:c};function p(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://jestjs.io/docs/en/getting-started"}),"Jest")," is a delightful JavaScript Testing Framework with a focus on simplicity."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"superplate")," serving optional Jest testing plugin which uses ",Object(o.b)("inlineCode",{parentName:"p"},"ts-jest")," under the hood and comes with ",Object(o.b)("inlineCode",{parentName:"p"},"nock")," and ",Object(o.b)("inlineCode",{parentName:"p"},"isomorphic-unfetch"),"."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"ts-jest")," is a TypeScript preprocessor for Jest to test projects written in TypeScript. Check out their ",Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"https://kulshekhar.github.io/ts-jest/"}),"documentation")," to learn more."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"nock")," is a HTTP server mocking library. We use it to mock requests in our tests. Check out their ",Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/nock/nock#nock"}),"documentation")," to learn more."),Object(o.b)("li",{parentName:"ul"},"While Next.js comes with a built-in polyfill for ",Object(o.b)("inlineCode",{parentName:"li"},"fetch"),"; We still need to add one for our Jest environment.")),Object(o.b)("h2",{id:"implementation"},"Implementation"),Object(o.b)("p",null,"You can see how ",Object(o.b)("strong",{parentName:"p"},"superplate"),"'s Jest plugin is implemented below."),Object(o.b)("h3",{id:"dependencies"},"Dependencies"),Object(o.b)("p",null,"First, we need to add dependencies to get started using Jest to run our tests."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-json",metastring:'title="package.json"',title:'"package.json"'}),'{\n    "devDependencies": {\n        "jest": "^26.6.3",\n        "ts-jest": "^26.4.4",\n        "identity-obj-proxy": "^3.0.0",\n        "nock": "^13.0.6",\n        "isomorphic-unfetch": "^3.1.0",\n        "dotenv": "^8.2.0"\n    }\n}\n')),Object(o.b)("h3",{id:"jestconfigjs"},Object(o.b)("inlineCode",{parentName:"h3"},"jest.config.js")),Object(o.b)("p",null,"We need to configure Jest to work with our environment. We'll be doing this in ",Object(o.b)("inlineCode",{parentName:"p"},"test/jest.config.js")," with the following code;"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js",metastring:'title="test/jest.config.js"',title:'"test/jest.config.js"'}),'const { pathsToModuleNameMapper } = require("ts-jest/utils");\nconst { compilerOptions } = require("../tsconfig.json");\n\nconst paths = compilerOptions.paths ? compilerOptions.paths : {};\n\nmodule.exports = {\n    rootDir: "../",\n    setupFilesAfterEnv: ["<rootDir>/test/jest.setup.js"],\n    testPathIgnorePatterns: ["<rootDir>/.next/", "<rootDir>/node_modules/"],\n    moduleNameMapper: {\n        ...pathsToModuleNameMapper(paths, { prefix: "<rootDir>/" }),\n        "\\\\.(scss|sass|css)$": "identity-obj-proxy",\n    },\n};\n')),Object(o.b)("p",null,"What we basically do is;"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Specifying a root directory for tests"),Object(o.b)("li",{parentName:"ul"},"Path to our Setup configuration for the testing environment"),Object(o.b)("li",{parentName:"ul"},"Mapping our ",Object(o.b)("inlineCode",{parentName:"li"},"tsconfig")," paths to jest"),Object(o.b)("li",{parentName:"ul"},"Mocking styles to prevent Jest to throw an error ")),Object(o.b)("h3",{id:"jestsetupjs"},Object(o.b)("inlineCode",{parentName:"h3"},"jest.setup.js")),Object(o.b)("p",null,"We need to apply the polyfill for the ",Object(o.b)("inlineCode",{parentName:"p"},"fetch"),", set environment variables to use in tests and setup ",Object(o.b)("inlineCode",{parentName:"p"},"nock")," to prevent memory leaks. We'll place this setup in ",Object(o.b)("inlineCode",{parentName:"p"},"test/jest.setup.js")," with the following code;"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js",metastring:'title="test/jest.setup.js"',title:'"test/jest.setup.js"'}),'import "isomorphic-unfetch";\nimport nock from "nock";\nimport dotenv from "dotenv";\n\ndotenv.config({ path: ".env.test" });\n\nafterAll(() => {\n    nock.cleanAll();\n    nock.restore();\n});\n')),Object(o.b)("h3",{id:"running-tests"},"Running Tests"),Object(o.b)("p",null,"We need to specify our config file when running jest, we can do this with ",Object(o.b)("inlineCode",{parentName:"p"},"jest -c test/jest.config.js"),". We will add this command to ",Object(o.b)("inlineCode",{parentName:"p"},"package.json")," as a test script. "),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-json",metastring:'title="package.json"',title:'"package.json"'}),'{\n    "scripts": {\n        "test": "jest -c test/jest.config.js"\n    },\n}\n')),Object(o.b)("h2",{id:"adding-jest-to-an-existing-project"},"Adding Jest to an Existing Project"),Object(o.b)("p",null,"If you want to add Jest to your existing project please check out;"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Jest's ",Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"https://jestjs.io/docs/en/getting-started"}),"documentation")),Object(o.b)("li",{parentName:"ul"},"ts-jest's ",Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"https://kulshekhar.github.io/ts-jest/docs/installation"}),"documentation")),Object(o.b)("li",{parentName:"ul"},"Next.js and Jest ",Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/vercel/next.js/tree/canary/examples/with-jest"}),"example repository"))))}p.isMDXComponent=!0}}]);