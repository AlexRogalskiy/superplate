(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{130:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return d}));var o=n(0),r=n.n(o);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var b=r.a.createContext({}),l=function(e){var t=r.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=l(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=r.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,b=s(e,["components","mdxType","originalType","parentName"]),m=l(n),p=o,d=m["".concat(c,".").concat(p)]||m[p]||u[p]||a;return n?r.a.createElement(d,i(i({ref:t},b),{},{components:n})):r.a.createElement(d,i({ref:t},b))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var b=2;b<a;b++)c[b]=n[b];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},93:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return l}));var o=n(3),r=n(7),a=(n(0),n(130)),c={id:"mobx",title:"Mobx",sidebar_label:"Mobx"},i={unversionedId:"state-management/mobx",id:"state-management/mobx",isDocsHomePage:!1,title:"Mobx",description:"Simple, scalable state management.",source:"@site/docs/state-management/mobx.md",slug:"/state-management/mobx",permalink:"/superplate/docs/state-management/mobx",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/state-management/mobx.md",version:"current",sidebar_label:"Mobx",sidebar:"someSidebar",previous:{title:"Recoil",permalink:"/superplate/docs/state-management/recoil"},next:{title:"How it Works?",permalink:"/superplate/docs/getting-started/how-it-works"}},s=[{value:"Observable state",id:"observable-state",children:[]},{value:"Actions",id:"actions",children:[]},{value:"Using store in components",id:"using-store-in-components",children:[]},{value:"Adding mobx to your project later",id:"adding-mobx-to-your-project-later",children:[]}],b={toc:s};function l(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Simple, scalable state management.")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Anything that can be derived from the application state, should be. Automatically.")),Object(a.b)("p",null,"MobX is a battle tested library that makes state management simple and scalable by transparently applying functional reactive programming.",Object(a.b)("br",{parentName:"p"}),"\n",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"https://mobx.js.org/README.html"}),"Refer to official documentation for detailed usage. ","\u2192")),Object(a.b)("h3",{id:"observable-state"},"Observable state"),Object(a.b)("p",null,"Mobx uses observables for store values. Properties, entire objects, arrays, Maps and Sets can all be made observable.",Object(a.b)("br",{parentName:"p"}),"\n",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"https://mobx.js.org/observable-state.html"}),"Refer to official documentation on observable state for detailed usage. ","\u2192")),Object(a.b)("h4",{id:"making-observable-stores-with-classes"},"Making observable stores with classes"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Make a counter store that holds a ",Object(a.b)("inlineCode",{parentName:"li"},"count")," state")),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-ts",metastring:'title="src/mobx/stores/counter/index.ts"',title:'"src/mobx/stores/counter/index.ts"'}),'import { makeAutoObservable } from "mobx";\n\nimport { icounter } from "./counter";\n\nexport class CounterStore implements icounter {\n  count = 0;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n}\n')),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-ts",metastring:'title="src/mobx/stores/counter/counter.d.ts"',title:'"src/mobx/stores/counter/counter.d.ts"'}),"export interface icounter {\n  count: number;\n}\n")),Object(a.b)("div",{className:"admonition admonition-info alert alert--info"},Object(a.b)("div",Object(o.a)({parentName:"div"},{className:"admonition-heading"}),Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",Object(o.a)({parentName:"h5"},{className:"admonition-icon"}),Object(a.b)("svg",Object(o.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(a.b)("path",Object(o.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(a.b)("div",Object(o.a)({parentName:"div"},{className:"admonition-content"}),Object(a.b)("p",{parentName:"div"},Object(a.b)("inlineCode",{parentName:"p"},"makeAutoObservable")," and its cousin ",Object(a.b)("inlineCode",{parentName:"p"},"makeObservable")," trap existing object properties and make them observable. ",Object(a.b)("inlineCode",{parentName:"p"},"makeAutoObservable")," is like ",Object(a.b)("inlineCode",{parentName:"p"},"makeObservable")," on steroids, as it infers all the properties by default."))),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Make a root store that holds the counter store")),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-ts",metastring:'title="src/mobx/stores/index.ts"',title:'"src/mobx/stores/index.ts"'}),'import { iroot } from "./store";\nimport { CounterStore } from "./counter";\nimport { icounter } from "./counter/counter";\n\nexport class RootStore implements iroot {\n    counterStore: icounter;\n\n    constructor() {\n        this.counterStore = new CounterStore();\n    }\n}\n')),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-ts",metastring:'title="src/mobx/stores/store.d.ts"',title:'"src/mobx/stores/store.d.ts"'}),'import { icounter } from "./stores/counter/counter";\n\nexport interface iroot {\n  counterStore: icounter;\n}\n')),Object(a.b)("p",null,"Before starting to read data from the store, let's add some action."),Object(a.b)("h3",{id:"actions"},"Actions"),Object(a.b)("p",null,"An action is any piece of code that modifies the state."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Add actions to counter store.")),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-ts",metastring:'title="src/mobx/stores/counter/index.ts"',title:'"src/mobx/stores/counter/index.ts"'}),'import { makeAutoObservable } from "mobx";\n\nimport { icounter } from "./counter";\n\nexport class CounterStore implements icounter {\n  count = 0;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n// highlight-start\n  increase = () => {\n    this.count++;\n  };\n\n  decrease = () => {\n    this.count--;\n  };\n// highlight-end\n}\n')),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-ts",metastring:'title="src/mobx/stores/counter/counter.d.ts"',title:'"src/mobx/stores/counter/counter.d.ts"'}),"export interface icounter {\n  count: number;\n// highlight-start\n  increase: () => void;\n  decrease: () => void;\n// highlight-end\n}\n")),Object(a.b)("h3",{id:"using-store-in-components"},"Using store in components"),Object(a.b)("p",null,"Firstly store must be made accessible to components. It can be done with ",Object(a.b)("inlineCode",{parentName:"p"},"React.useContext"),". Then with a custom hook, store can be read from components."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Make a context to hold store.")),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-ts",metastring:'title="src/mobx/index.tsx"',title:'"src/mobx/index.tsx"'}),'import React from "react";\n\nconst StoreContext = React.createContext<RootStore | undefined>(undefined);\n')),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Use its provider to make store accessible to all components.")),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-tsx",metastring:'title="src/mobx/index.tsx"',title:'"src/mobx/index.tsx"'}),'import React from "react";\n// highlight-start\nimport { iroot } from "./stores/store";\n// highlight-end\n\n// highlight-start\nlet store: iroot;\n// highlight-end\n\nconst StoreContext = React.createContext<RootStore | undefined>(undefined);\n\n// highlight-start\nexport const RootStoreProvider = ({\n  children,\n}: {\n  children: React.ReactNode;\n}) => {\n  const root = store ?? new RootStore();\n\n  return <StoreContext.Provider value={root}>{children}</StoreContext.Provider>;\n};\n// highlight-end\n')),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Components can read from store via a custom hook.")),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-tsx",metastring:'title="src/mobx/index.tsx"',title:'"src/mobx/index.tsx"'}),'import React from "react";\nimport { iroot } from "./stores/store";\n\nlet store: iroot;\n\nconst StoreContext = React.createContext<RootStore | undefined>(undefined);\n\nexport const RootStoreProvider = ({\n  children,\n}: {\n  children: React.ReactNode;\n}) => {\n  const root = store ?? new RootStore();\n\n  return <StoreContext.Provider value={root}>{children}</StoreContext.Provider>;\n};\n\n// highlight-start\nexport const useRootStore = () => {\n  const context = React.useContext(StoreContext);\n  if (context === undefined) {\n    throw new Error("useRootStore must be used within RootStoreProvider");\n  }\n\n  return context;\n};\n// highlight-end\n')),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Wrap your component with ",Object(a.b)("inlineCode",{parentName:"li"},"observer")," HOC.")),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-tsx",metastring:'title="Your Component"',title:'"Your','Component"':!0}),'// highlight-start\nimport { observer } from "mobx-react";\n// highlight-end\nimport { useRootStore } from "@mobx";\n\n// highlight-start\nexport const MobxExample: React.FC = observer(() => {\n// highlight-end\n  const { counterStore } = useRootStore();\n  const { count, increase, decrease } = counterStore;\n\n  return (\n    <div>\n      <div>\n        <h2>Counter</h2>\n        <button\n          type="button"\n          onClick={increase}\n        >\n          +\n        </button>\n        <span>{count}</span>\n        <button\n          type="button"\n          onClick={decrease}\n        >\n          -\n        </button>\n      </div>\n    </div>\n  );\n});\n')),Object(a.b)("p",null,Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"https://mobx.js.org/react-integration.html"}),"Refer to official documentation on React integration for detailed usage. ","\u2192")),Object(a.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(a.b)("div",Object(o.a)({parentName:"div"},{className:"admonition-heading"}),Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",Object(o.a)({parentName:"h5"},{className:"admonition-icon"}),Object(a.b)("svg",Object(o.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(a.b)("path",Object(o.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(a.b)("div",Object(o.a)({parentName:"div"},{className:"admonition-content"}),Object(a.b)("p",{parentName:"div"},"You might consider using mobx-react-lite instead of mobx-react if you're not using class components."))),Object(a.b)("h3",{id:"adding-mobx-to-your-project-later"},"Adding mobx to your project later"),Object(a.b)("p",null,"If you didn't choose the plugin during project creation phase, you can follow the instructions below to add it."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Install ",Object(a.b)("inlineCode",{parentName:"li"},"mobx")," and ",Object(a.b)("inlineCode",{parentName:"li"},"mobx-react")," packages.")),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-bash"}),"npm install mobx && npm install mobx-react\n")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(o.a)({parentName:"li"},{href:"#making-observable-stores-with-classes"}),"Follow instructions beginning from here"))),Object(a.b)("p",null,Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"https://mobx.js.org/installation.html"}),"Refer to official documentation on installation for detailed usage. ","\u2192")))}l.isMDXComponent=!0}}]);