(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{135:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return u}));var r=n(0),i=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=i.a.createContext({}),p=function(e){var t=i.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},b=function(e){var t=p(e.components);return i.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},m=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),b=p(n),m=r,u=b["".concat(o,".").concat(m)]||b[m]||d[m]||a;return n?i.a.createElement(u,s(s({ref:t},l),{},{components:n})):i.a.createElement(u,s({ref:t},l))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<a;l++)o[l]=n[l];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},83:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return p}));var r=n(3),i=n(7),a=(n(0),n(135)),o={id:"testing-library",title:"Testing Library",sidebar_label:"Testing Library"},s={unversionedId:"testing/testing-library",id:"testing/testing-library",isDocsHomePage:!1,title:"Testing Library",description:"The React Testing Library is a very light-weight solution for testing React components. It provides light utility functions on top of react-dom and react-dom/test-utils, in a way that encourages better testing practices.",source:"@site/docs/testing/testing-library.md",slug:"/testing/testing-library",permalink:"/superplate/docs/testing/testing-library",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/testing/testing-library.md",version:"current",sidebar_label:"Testing Library",sidebar:"someSidebar",previous:{title:"Jest",permalink:"/superplate/docs/testing/jest"},next:{title:"Enzyme",permalink:"/superplate/docs/testing/enzyme"}},c=[{value:"Implementation",id:"implementation",children:[{value:"Dependencies",id:"dependencies",children:[]},{value:"Custom Render",id:"custom-render",children:[]},{value:"Example Test",id:"example-test",children:[]},{value:"Running Tests",id:"running-tests",children:[]}]},{value:"Adding Testing Library to an existing project",id:"adding-testing-library-to-an-existing-project",children:[]}],l={toc:c};function p(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"The ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://testing-library.com/docs/react-testing-library/intro/"}),"React Testing Library")," is a very light-weight solution for testing React components. It provides light utility functions on top of ",Object(a.b)("inlineCode",{parentName:"p"},"react-dom")," and ",Object(a.b)("inlineCode",{parentName:"p"},"react-dom/test-utils"),", in a way that encourages better testing practices."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"superplate"),"'s plugin of React Testing Library is built on top of ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"jest"}),"superplate's Jest plugin")," and automatically includes necessary wrappers and imports to run your component tests."),Object(a.b)("h2",{id:"implementation"},"Implementation"),Object(a.b)("p",null,"You can see how ",Object(a.b)("strong",{parentName:"p"},"superplate"),"'s React Testing Library plugin is implemented below."),Object(a.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(a.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-heading"}),Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",Object(r.a)({parentName:"h5"},{className:"admonition-icon"}),Object(a.b)("svg",Object(r.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(a.b)("path",Object(r.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(a.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-content"}),Object(a.b)("p",{parentName:"div"},"Configuration for Jest is not included. Please check out ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"jest"}),"Jest Plugin")," to learn more about our Jest configuration."))),Object(a.b)("h3",{id:"dependencies"},"Dependencies"),Object(a.b)("p",null,"First, we need to add dependencies to get started using React Testing Library to run our tests."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-json",metastring:'title="package.json"',title:'"package.json"'}),'{\n    "devDependencies": {\n        "@testing-library/react": "^11.2.3",\n        "@testing-library/react-hooks": "^5.0.0"\n    }\n}\n')),Object(a.b)("h3",{id:"custom-render"},"Custom Render"),Object(a.b)("p",null,"We may need to wrap our test components to context providers, data stores etc. It's a good practice to make this wrappers globally available. We will create a custom render and re-export everything from ",Object(a.b)("inlineCode",{parentName:"p"},"React Testing Library")," in ",Object(a.b)("inlineCode",{parentName:"p"},"test/index.tsx")," file. "),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts",metastring:'title="test/index.tsx"',title:'"test/index.tsx"'}),'import React, { ReactElement } from "react";\nimport {\n    render as baseRender,\n    RenderOptions,\n    RenderResult,\n} from "@testing-library/react";\n/*\nimport { ThemeProvider } from \'my-ui-lib\'\nimport { TranslationProvider } from \'my-i18n-lib\'\n*/\n\nexport const AllTheProviders = ({ children }) => {\n    return (\n        // <ThemeProvider theme="light">\n        //     <TranslationProvider>\n                {children}\n        //     </TranslationProvider>\n        // </ThemeProvider>\n    );\n};\n\nconst render = (ui: ReactElement, options?: Omit<RenderOptions, "queries">) =>\n    baseRender(ui, { wrapper: AllTheProviders, ...options }) as RenderResult;\n\n// re-export everything\nexport * from "@testing-library/react";\n\n// override render method\nexport { render };\n')),Object(a.b)("h3",{id:"example-test"},"Example Test"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-tsx",metastring:'title="MyComponent.spec.tsx"',title:'"MyComponent.spec.tsx"'}),'// highlight-next-line\nimport { fireEvent, render } from "@test"; // <root>/test/index.tsx\nimport { MyComponent } from "./MyComponent";\n\ndescribe("MyComponent", () => {\n    it("button is clickable", () => {\n        const mockFn = jest.fn();\n        // highlight-next-line\n        const { getByTestId } = render(<MyComponent onClick={mockFn} />);\n\n        const btn = getByTestId("btn");\n        fireEvent.click(btn);\n\n        expect(mockFn).toHaveBeenCalledTimes(1);\n    });\n});\n')),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-tsx",metastring:'title="MyComponent.tsx"',title:'"MyComponent.tsx"'}),'import React from "react";\n\nexport const MyComponent: React.FC<{ onClick: () => void }> = ({\n    onClick,\n}) => {\n    return (\n        <div>\n            <button data-testid="btn" onClick={onClick}>\n                Click Me!\n            </button>\n        </div>\n    );\n};\n')),Object(a.b)("h3",{id:"running-tests"},"Running Tests"),Object(a.b)("p",null,"We will use Jest as our test runner. If Jest is already set up; you can simply run ",Object(a.b)("inlineCode",{parentName:"p"},"test")," script with ",Object(a.b)("inlineCode",{parentName:"p"},"npm run test")," or ",Object(a.b)("inlineCode",{parentName:"p"},"yarn test"),"."),Object(a.b)("h2",{id:"adding-testing-library-to-an-existing-project"},"Adding Testing Library to an existing project"),Object(a.b)("p",null,"If you want to add React Testing Library to your existing project please check out;"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"React Testing Library ",Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"https://testing-library.com/docs/react-testing-library/intro/"}),"documentation")),Object(a.b)("li",{parentName:"ul"},"Next.js with Jest and Testing Library ",Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/vercel/next.js/tree/canary/examples/with-typescript-eslint-jest"}),"example repository"))))}p.isMDXComponent=!0}}]);