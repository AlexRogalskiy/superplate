(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{114:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return f}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=r.a.createContext({}),l=function(e){var t=r.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=l(e.components);return r.a.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),b=a,f=p["".concat(i,".").concat(b)]||p[b]||d[b]||o;return n?r.a.createElement(f,c(c({ref:t},u),{},{components:n})):r.a.createElement(f,c({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=b;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var u=2;u<o;u++)i[u]=n[u];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},78:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return l}));var a=n(3),r=n(7),o=(n(0),n(114)),i={id:"swr",title:"SWR",sidebar_label:"SWR"},c={unversionedId:"hooks/swr",id:"hooks/swr",isDocsHomePage:!1,title:"SWR",description:"React Hooks library for data fetching.",source:"@site/docs/hooks/swr.md",slug:"/hooks/swr",permalink:"/superplate/docs/hooks/swr",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/hooks/swr.md",version:"current",sidebar_label:"SWR",sidebar:"someSidebar",previous:{title:"styled-components Support",permalink:"/superplate/docs/styled-components"}},s=[{value:"useSWR",id:"useswr",children:[]},{value:"Mutation",id:"mutation",children:[]}],u={toc:s};function l(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"React Hooks library for data fetching."),Object(o.b)("p",null,"The name \u201cSWR\u201d is derived from stale-while-revalidate, a HTTP cache invalidation strategy popularized by ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://tools.ietf.org/html/rfc5861"}),"HTTP RFC 5861"),". SWR is a strategy to first return the data from cache (stale), then send the fetch request (revalidate), and finally come with the up-to-date data."),Object(o.b)("p",null,"With SWR, components will get a stream of data updates constantly and automatically.\nAnd the UI will be always fast and reactive.",Object(o.b)("br",{parentName:"p"}),"\n",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://swr.vercel.app/"}),"Refer to official documentation for detailed usage. ","\u2192")),Object(o.b)("h3",{id:"useswr"},"useSWR"),Object(o.b)("p",null,"Pass an API key and start using it inside any function components:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"import useSWR from 'swr'\n\nconst fetcher = url => fetch(url).then(r => r.json())\n\nfunction Profile () {\n  const { data, error } = useSWR('/api/user/123', fetcher)\n  if (error) return <div>failed to load</div>\n  if (!data) return <div>loading...</div>\n  // render data\n  return <div>hello {data.name}!</div>\n}\n")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"fetcher")," is an async function that accepts the key of SWR, and returns the data. You can use any library to handle data fetching."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"import axios from 'axios'\n\nconst fetcher = url => axios.get(url).then(res => res.data)\n")),Object(o.b)("p",null,Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://swr.vercel.app/docs/data-fetching"}),"Refer to official documentation on data fetching for detailed usage. ","\u2192")),Object(o.b)("h3",{id:"mutation"},"Mutation"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"useSWR")," also returns a ",Object(o.b)("inlineCode",{parentName:"p"},"mutate")," method that is pre-bound to SWR's key"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"import useSWR from 'swr'\n\nfunction Profile () {\n  const { data, mutate } = useSWR('/api/user', fetcher)\n  return (\n    <div>\n      <h1>My name is {data.name}.</h1>\n      <button onClick={async () => {\n        const newName = data.name.toUpperCase()\n        // send a request to the API to update the data\n        await requestUpdateUsername(newName)\n        // update the local data immediately and revalidate (refetch)\n        // NOTE: key is not required when using useSWR's mutate as it's pre-bound\n        mutate({ ...data, name: newName })\n      }}>Uppercase my name!</button>\n    </div>\n  )\n}\n")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"mutate")," can also be imported directly form ",Object(o.b)("inlineCode",{parentName:"p"},"swr")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"import useSWR, { mutate } from 'swr'\n\nfunction App () {\n  return (\n    <div>\n      <Profile />\n      <button onClick={() => {\n        // set the cookie as expired\n        document.cookie = 'token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;'\n        // tell all SWRs with this key to revalidate\n        mutate('/api/user')\n      }}>\n        Logout\n      </button>\n    </div>\n  )\n}\n")),Object(o.b)("p",null,Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://swr.vercel.app/docs/mutation"}),"Refer to official documentation on mutation for detailed usage. ","\u2192")))}l.isMDXComponent=!0}}]);